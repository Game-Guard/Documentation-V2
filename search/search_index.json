{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome to the official Game Guard Roblox anti-cheat documenation. The following pages will help you get started with using Game Guard in your game in order to secure it from possible exploiters and hackers.</p> <p>Warning</p> <p>Game Guard is still in its early stages of development. This means that not all of the features are implemented yet and there may be bugs. If you encounter any bugs or vulnerabilities, please report them to us on our GitHub or our community Discord server.</p>"},{"location":"#enough-talk-lets-get-started","title":"Enough talk, let's get started!","text":"<ul> <li>Installation</li> <li>Your First Game</li> </ul>"},{"location":"#get-help","title":"Get Help:","text":"<ul> <li>Discord</li> <li>GitHub</li> </ul>"},{"location":"api/check-jump-power/","title":"Checking Jump Power","text":"<p>This function will allow you to check a players jump power.</p>"},{"location":"api/check-jump-power/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player in which Game Guard should check the jump power for. Player jumpPower The jump power value which Game Guard should detect. Int Result The function that will be called when Game Guard detects the jump power. function"},{"location":"api/check-jump-power/#example-usage","title":"Example Usage:","text":"<p>Warning</p> <p>This function is not the most accurate.</p> <pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n\n    gameGuard:checkJP(plr, 50, function(plrToCheck, state, detectionType, data)\n        print(plrToCheck) -- Prints the player who was detected.\n        print(state) -- Prints a boolean, true or false based on whether or not the player was detected.\n        print(detectionType) -- Will print \"jp\".\n        print(data) -- Returns data table:\n        -- {\n        --     [\"mag\"] = mag, -- The magnitude between newPos and prevPos.\n        --     [\"calc\"] = calculatedJP, -- The calculated jump power.\n        --     [\"prevPos\"] = prevPos -- The previous position.\n        --     [\"newPos\"] = newPos -- The new position at the check.\n        -- }\n    end)\nend)\n</code></pre>"},{"location":"api/check-jump-power/#update-jump-power","title":"Update Jump Power","text":"<p>This function updates the jump power check for a player.</p>"},{"location":"api/check-jump-power/#parameters_1","title":"Parameters:","text":"Parameter Description Type plr The player in which Game Guard should check the jump power for. Player jumpPower The jump power value which Game Guard should detect. Int"},{"location":"api/check-jump-power/#example-usage_1","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.gameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    local JumpPower = 100\n    gameGuard:updateJP(plr, JumpPower)\nend)\n</code></pre>"},{"location":"api/check-speed/","title":"Checking Speed","text":"<p>This function will allow you to check a players speed.</p>"},{"location":"api/check-speed/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player object of which to check the speed value of. Player WalkSpeed The amount of walk speed the detection will be run at. Int Result The function to call on the result of the check speed function. function"},{"location":"api/check-speed/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.gameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    local WalkSpeed = 16\n    gameGuard:checkSpeed(plr, WalkSpeed, function(plrToCheck, state, detectionType, data)\n        print(plrToCheck) -- Prints the player who was detected.\n        print(state) -- Prints a boolean, true or false based on whether or not the player was detected.\n        print(detectionType) -- Will print \"speed\".\n        print(data) -- Returns data table:\n        -- {\n        --     [\"mag\"] = mag, -- The magnitude between newPos and prevPos.\n        --     [\"calc\"] = calculatedSpeed, -- The calculated speed.\n        --     [\"prevPos\"] = prevPos -- The previous position.\n        --     [\"newPos\"] = newPos -- The new position at the check.\n        -- }\n    end)\nend)\n</code></pre>"},{"location":"api/check-speed/#update-speed","title":"Update Speed","text":"<p>This function updates the walk speed check for a player.</p>"},{"location":"api/check-speed/#parameters_1","title":"Parameters:","text":"Parameter Description Type plr The player object of which to check the speed value of. Player WalkSpeed The amount of walk speed the detection will be run at. Int"},{"location":"api/check-speed/#example-usage_1","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.gameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    local WalkSpeed = 20\n    gameGuard:updateSpeed(plr, WalkSpeed)\nend)\n</code></pre>"},{"location":"api/close/","title":"Closing Game Guard","text":"<p>This will close all loops, iterations, and checks that Game Guard calls. You should call this when a player leaves, suggested in the example below.</p>"},{"location":"api/close/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player object in which to close Game Guard for. Player"},{"location":"api/close/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerRemoving:Connect(function(plr)\n    gameGuard:close(plr)\nend)\n</code></pre>"},{"location":"api/enums/","title":"Enums","text":"<p>A list of enumerators that can be used to configure Game Guard.</p>"},{"location":"api/enums/#ignore-next","title":"Ignore Next","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\ngameGuard.Enums.IgnoreNext = {\n    [\"WalkSpeed\"] = \"speed\",\n    [\"JumpPower\"] = \"jp\",\n    [\"NoClip\"] = \"nc\"\n}\n</code></pre>"},{"location":"api/enums/#client-check","title":"Client Check","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <pre><code>[\"ClientCheck\"] = {\n    [\"WalkSpeed\"] = \"ws\",\n    [\"JumpPower\"] = \"jp\",\n    [\"GraphicalUserInterface\"] = \"gui\",\n    [\"Argument\"] = {\n        [\"Tick\"] = \"arg (tick)\"\n    },\n    [\"Authentication\"] = {\n        [\"Token\"] = \"auth (token)\",\n        [\"Data\"] = \"auth (data)\"\n    }\n}\n</code></pre>"},{"location":"api/fly-check/","title":"Fly Check","text":"<p>This function allows you to check if a specific player is flying.</p>"},{"location":"api/fly-check/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player of whom you want to check if they are flying. Player time The time on how long you can go without touching the ground. Int function The function to call. function"},{"location":"api/fly-check/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    gameGuard:flyCheck(plr, 3, function(player, state, detectionType, data)\n            print(player) -- Prints the player who was detected.\n            print(state) -- Prints a boolean, true or false based on whether or not the player was detected.\n            print(detectionType) -- Will print \"fly\".\n            print(data) -- Returns data table:\n            -- {\n            --     [\"prevPos\"] = prevPos -- The previous position.\n            --     [\"lastTouchedFloor\"] = lastTouchedFloor -- The last time the player touched the floor.\n            -- }\n    end)\nend)\n</code></pre>"},{"location":"api/get-times-triggered/","title":"Get Times Triggered","text":"<p>Gives you a table of times the anti-cheat has been triggered for a specific player.</p>"},{"location":"api/get-times-triggered/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player object of which to get the times triggered for. Player"},{"location":"api/get-times-triggered/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    local timesTriggered = gameGuard:getTimesTriggered(plr)\n    -- Returns:\n    -- timesTriggered = {\n    --     [\"speed\"] = 0, The amount of speed detections.\n    --     [\"jp\"] = 0, The amount of jump power detections.\n    --     [\"nc\"] = 0, The amount of no-clip detections.\n    --     [\"total\"] = 0, The total amount of detections.\n    -- }\nend)\n</code></pre>"},{"location":"api/get-version/","title":"Getting Version","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <p>This function will allow you to retrieve Game Guards current version and tag.</p>"},{"location":"api/get-version/#parameters","title":"Parameters:","text":"Parameter Description Type None None. nil"},{"location":"api/get-version/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.gameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function()\n    print(gameGuard:getVersion()) -- Will print table:\n        -- {\n        --     [\"version\"] = version, -- The version of Game Guard.\n        --     [\"tag\"] = tag, -- The current tag of Game Guard.\n        -- }\nend)\n</code></pre>"},{"location":"api/ignore-next-check/","title":"Ingoring Next Check","text":"<p>This function allows you to initialize Game Guard.</p>"},{"location":"api/ignore-next-check/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player object in which to ignore next check for. Player ignoreNextEnum The check to ignore. Enum"},{"location":"api/ignore-next-check/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:ignoreNextCheck(plr, gameGuard.Enums.IgnoreNext.WalkSpeed)\nend)\n</code></pre>"},{"location":"api/initialization/","title":"Initialization","text":"<p>This function allows you to initialize Game Guard.</p>"},{"location":"api/initialization/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player object in which to initialize Game Guard for. Player"},{"location":"api/initialization/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\nend)\n</code></pre>"},{"location":"api/rename-services/","title":"Renaming Services","text":"<p>This function allows you to call a loop that will rename services and if an argument is provided, it will rename them every amount of time you inputted.</p>"},{"location":"api/rename-services/#parameters","title":"Parameters:","text":"Parameter Description Type time (optional) The time between each rename services, default renames it once. Int"},{"location":"api/rename-services/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\n\ngameGuard:renameServices(3) -- Will rename services for the player every 3 seconds.\n</code></pre>"},{"location":"api/update-max-air-time/","title":"Update Max Air Time","text":"<p>This functions sets the amount of time that a player can be in the air for before being detected.</p>"},{"location":"api/update-max-air-time/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player object of which to get the times triggered for. Player maxAirTime The amount of time in seconds that a player can be in the air for. Int"},{"location":"api/update-max-air-time/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    gameGuard:updateMaxAirTime(plr, 5)\nend)\n</code></pre>"},{"location":"api/client-checks/client-send-check/","title":"Client Send Check","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <p>Warning</p> <p>This can be bypassed by a client sided exploit.</p> <pre><code>local gameGuard = require(script.Parent.GameGuard)\n\ngameGuard:clientSendCheck()\n</code></pre>"},{"location":"api/client-checks/init-client-script/","title":"Initialize Client Script","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\ngameGuard:clientSendCheck()\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:initClientScript(plr)\nend)\n</code></pre>"},{"location":"api/client-checks/set-client-check-delay/","title":"Set Client Check State","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <p>Sets the delay for the client check.</p>"},{"location":"api/client-checks/set-client-check-delay/#parameters","title":"Parameters:","text":"Parameter Description Type delay The delay between checks. Int <p>Warning</p> <p>We do not recommend setting this under 3 seconds as this will cause more false positives for people who have a high ping. We also do not encourage using this function frequently because it may cause issues with the client anti-cheat.</p>"},{"location":"api/client-checks/set-client-check-delay/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\n\ngameGuard:init(plr)\ngameGuard:setClientCheckDelay(10) -- Sets the delay to 10 seconds.\n</code></pre>"},{"location":"api/client-checks/set-client-check-function/","title":"Set Client Check Function","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <pre><code>local gameGuard = require(script.Parent.GameGuard)\n\ngameGuard:setClientCheckFunc(function(plr, detectionType)\n    plr:Kick(\"You were detected for \" .. detectionType)\nend)\n</code></pre>"},{"location":"api/client-checks/set-client-check-state/","title":"Set Client Check State","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <p>Sets the state for the client anti-cheat.</p>"},{"location":"api/client-checks/set-client-check-state/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player object of which to get the times triggered for. Player state The state of the client anti-cheat. boolean"},{"location":"api/client-checks/set-client-check-state/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    gameGuard:setClientCheckState(plr, false)\nend)\n</code></pre>"},{"location":"api/no-clip/nc-add-exclusions/","title":"Adding No Clip Exclusions","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <p>This function will allow you to add a players no clip exclusion parts.</p>"},{"location":"api/no-clip/nc-add-exclusions/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player of which the no clip part will be excluded for. Player excludeObject The part that will be excluded in no clip for the player. Part"},{"location":"api/no-clip/nc-add-exclusions/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.gameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    gameGuard:ncAddExclusion(player, Workspace:WaitForChild(\"Exclude\")) -- Will exclude part in workspace called \"Exclude\".\nend)\n</code></pre>"},{"location":"api/no-clip/nc-remove-exclusions/","title":"Removing No Clip Exclusions","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <p>This function will allow you to remove a players no clip exclusion parts.</p>"},{"location":"api/no-clip/nc-remove-exclusions/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player of which the no clip part will be removed for. Player excludeObject The part that will be removed from the exclusion list in no clip for the player. Part"},{"location":"api/no-clip/nc-remove-exclusions/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.gameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n    gameGuard:ncRemoveExclusion(player, Workspace:WaitForChild(\"Exclude\")) -- Will remove exclusion for part in workspace called \"Exclude\".\nend)\n</code></pre>"},{"location":"api/no-clip/no-clip/","title":"No Clip","text":"<p>Warning</p> <p>\u2b50Pro Feature: This function is a pro feature and requires a pro license to use. You can purchase a pro license here.</p> <p>This function will allow you to check when a player is no clipping.</p>"},{"location":"api/no-clip/no-clip/#parameters","title":"Parameters:","text":"Parameter Description Type plr The player in which to check if they are no clipping. Player hitbox (optional) The size of the hitbox, an optional parameter. Vector3 Result The function that will be called every frame. function"},{"location":"api/no-clip/no-clip/#example-usage","title":"Example Usage:","text":"<pre><code>local gameGuard = require(script.Parent.GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n\n    gameGuard:noclip(plr, Vector3.new(1.5, 1.9, 0.8), function(plrToCheck, state, detectionType)\n        print(plrToCheck) -- Prints the player who was detected.\n        print(state) -- Prints a boolean, true or false based on whether or not the player was detected.\n        print(detectionType) -- Will print \"noclip\".\n    end)\nend)\n</code></pre>"},{"location":"changelog/how-to-upgrade/","title":"This page is in the process of being written. Please check back at a later date.","text":""},{"location":"changelog/updates/","title":"Updates","text":""},{"location":"changelog/updates/#game-guard","title":"Game Guard","text":""},{"location":"changelog/updates/#100-beta-september-21-2023","title":"1.0.0 (Beta) September 21, 2023","text":"<ul> <li>Initial release.</li> <li>Speed check.</li> <li>Jump power check.</li> <li>Noclip check.</li> <li>Server anti-cheat.</li> <li>Client anti-cheat.</li> <li>Fly check.</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>Danger</p> <p>Only put Game Guard inside server script service or server storage. If it is put into any other services, your game may be vulnerable.</p>"},{"location":"getting-started/installation/#step-1-downloading-game-guard","title":"Step 1: Downloading Game Guard","text":"<p>The first step to installing Game Guard is to download it. You can download Game Guard from the releases.</p>"},{"location":"getting-started/installation/#step-2-installing-game-guard","title":"Step 2: Installing Game Guard","text":"<p>The next step is to install Game Guard into your game. You can do this by dragging the Game Guard module into server script service or server storage.</p>"},{"location":"getting-started/installation/#step-3-getting-started-with-game-guard","title":"Step 3: Getting started with Game Guard","text":"<p>The final step is to get started with Game Guard. You can do this by reading the getting started guide.</p>"},{"location":"getting-started/your-first-game/","title":"Your First Game","text":"<p>We know for some people, setting up a new module in your game can be quite confusing and documentation can be hard to understand. That's why we've created this page to help you get started with Game Guard in your game.</p>"},{"location":"getting-started/your-first-game/#step-1-installation","title":"Step 1: Installation","text":"<p>The first step to using Game Guard in your game is to install it. You can find the installation instructions here.</p>"},{"location":"getting-started/your-first-game/#step-2-initializing-game-guard-in-a-script","title":"Step 2: Initializing Game Guard in a script","text":"<p>The next step is to initialize Game Guard on the server, in order to do so, create a new server script in server script service and paste the following code into it: <pre><code>local gameGuard = require(game:GetService(\"ServerScriptService\").GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\nend)\n</code></pre></p>"},{"location":"getting-started/your-first-game/#step-3-choosing-what-checks-to-use","title":"Step 3: Choosing what checks to use","text":"<p>Game Guard offers many check offered in the API section of this documentation that you can check out, in this guide we will be using some of the basic checks in order to demonstrate what Game Guard can do. Copy and paste the code below into the script you created in step 2: <pre><code>--- ^ Code from above ^ ---\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n\n    gameGuard:checkSpeed(plr, 16, function(plrToCheck, state, detectionType, data)\n        if state then\n            plrToCheck:Kick(\"You were detected for exploiting in this experience. Detection: \" .. detectionType .. \".\")\n        end\n        print(data)\n    end)\nend)\n</code></pre> The above code will check the players speed on the server and if it exceeds the second value we passed in (16), it will kick the player from the game with a detection type of \"speed\". You can read what the data parameter prints by testing it out in your game, or read the check speed documentation here.</p>"},{"location":"getting-started/your-first-game/#the-code-all-together-for-easy-copy-and-paste","title":"The code all together for easy copy-and-paste","text":"<p>Warning</p> <p>You may have to test the experience in the Roblox app rather than Roblox Studio due to Roblox Studio not synchronizing the players added event properly. This is only a case in some scenarios.</p> <pre><code>local gameGuard = require(game:GetService(\"ServerScriptService\").GameGuard)\nlocal Players = game:GetService(\"Players\")\n\nPlayers.PlayerAdded:Connect(function(plr)\n    gameGuard:init(plr)\n\n    gameGuard:checkSpeed(plr, 16, function(plrToCheck, state, detectionType, data)\n        if state then\n            plrToCheck:Kick(\"You were detected for exploiting in this experience. Detection: \" .. detectionType .. \".\")\n        end\n        print(data)\n    end)\nend)\n</code></pre>"},{"location":"getting-started/your-first-game/#the-outcome","title":"The outcome:","text":""}]}